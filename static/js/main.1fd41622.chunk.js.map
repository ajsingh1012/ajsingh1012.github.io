{"version":3,"sources":["components/CardGrid.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","margin","bullet","display","transform","title","fontSize","pos","marginBottom","listStyle","listStyleType","padding","gridTemplateColumns","gridGap","CardInfo","classes","lib","name","content","url","arr","$","ajax","async","jsonp","method","dataType","success","res","forEach","element","entry","description","has_pages","document","URL","desc","link","push","getInfo","className","map","e","Card","variant","CardContent","Typography","component","CardActions","Button","size","href","App","gutterBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6RASMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,IACPC,OAAQ,QAEVC,OAAQ,CACNC,QAAS,eACTF,OAAQ,QACRG,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhBC,UAAW,CACTA,UAAW,QAEbC,cAAe,CACbA,cAAe,OACfC,QAAS,MACTV,OAAQ,MACRE,QAAS,OACTS,oBAAqB,4BACrBC,QAAS,KAiCE,SAASC,IACpB,IAAMC,EAAUlB,IACVmB,EA/BV,WACI,IACIC,EAAMC,EAASC,EADfC,EAAM,GAyBV,OAtBAC,IAAEC,KAAK,CACHH,IAAK,iDACLI,OAAO,EACPC,OAAO,EACPC,OAAQ,MACRC,SAAU,OACVC,QAAS,SAASC,GACdA,EAAIC,SAAQ,SAACC,GACX,IAAIC,EACJd,EAAOa,EAAQb,KACfC,EAAUY,EAAQE,YAEdb,EADDW,EAAQG,UACDC,SAASC,IAAML,EAAQb,KAEzB,kCAAoCa,EAAQb,KAEpDc,EAAQ,CAACd,KAAMA,EAAMmB,KAAMlB,EAASmB,KAAMlB,GAC1CC,EAAIkB,KAAKP,SAKZX,EAKKmB,GAEZ,OACI,oBAAIC,UAAWzB,EAAQL,cAAvB,SACKM,EAAIyB,KAAI,SAACC,GAAD,OACL,oBAAIF,UAAWzB,EAAQN,UAAvB,SACI,eAACkC,EAAA,EAAD,CAAMH,UAAWzB,EAAQhB,KAAM6C,QAAQ,WAAvC,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYF,QAAQ,KAAKG,UAAU,KAAnC,SACKL,EAAEzB,OAEP,cAAC6B,EAAA,EAAD,CAAYF,QAAQ,QAAQG,UAAU,IAAtC,SACKL,EAAEN,UAGX,cAACY,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,KAAMT,EAAEL,KAA7B,oCCjEbe,MAdf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAACM,EAAA,EAAD,CAAYF,QAAQ,KAAKG,UAAU,KAAKM,cAAY,EAApD,qBACA,cAACP,EAAA,EAAD,CAAYF,QAAQ,IAAIG,UAAU,IAAIM,cAAY,EAAlD,wGAGA,cAAC,EAAD,UCFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASgC,eAAe,SAM1BZ,M","file":"static/js/main.1fd41622.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n    margin: '10px',\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  listStyle: {\r\n    listStyle: 'none',\r\n  },\r\n  listStyleType: {\r\n    listStyleType: 'none',\r\n    padding: '0px',\r\n    margin: '0px',\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, minmax(0, 1fr))',\r\n    gridGap: 3,\r\n  },\r\n});\r\n\r\nfunction getInfo() {\r\n    var arr = [];\r\n    var name, content, url;\r\n\r\n    $.ajax({\r\n        url: \"https://api.github.com/users/ajsingh1012/repos\",\r\n        async: false,\r\n        jsonp: true,\r\n        method: \"GET\",\r\n        dataType: \"json\",\r\n        success: function(res) {\r\n            res.forEach((element) => {\r\n              var entry;\r\n              name = element.name;\r\n              content = element.description;\r\n              if(element.has_pages) {  \r\n                  url = document.URL + element.name;\r\n              } else {\r\n                url = 'https://github.com/ajsingh1012/' + element.name;\r\n              }\r\n              entry = {name: name, desc: content, link: url};\r\n              arr.push(entry);\r\n            });\r\n        }\r\n    });\r\n\r\n    return arr;\r\n}\r\n\r\nexport default function CardInfo() {\r\n    const classes = useStyles();\r\n    const lib = getInfo();\r\n\r\n    return (\r\n        <ul className={classes.listStyleType}>\r\n            {lib.map((e) =>\r\n                <li className={classes.listStyle}>\r\n                    <Card className={classes.root} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                                {e.name}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                {e.desc}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <Button size=\"small\" href={e.link}>Learn More</Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n}","//import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CardGrid from './components/CardGrid';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom>Welcome</Typography>\n        <Typography variant=\"p\" component=\"p\" gutterBottom>\n          This is the official front cover portfolio for the GitHub repositories of Aneeljyot Alagh.\n        </Typography>\n        <CardGrid />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}